name: Build and Publish OneBot Adapter

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # 匹配 v 开头的 tag

permissions:
  contents: write  # 需要写入权限来创建 release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取所有历史记录和 tags

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      # 从 tag 获取版本号
      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            LATEST_VERSION=${LATEST_TAG#v}
            echo "RELEASE_VERSION=${LATEST_VERSION}.dev$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          fi

      - name: Build package
        run: |
          python -m build
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: onebot-adapter-${{ env.RELEASE_VERSION }}
          path: dist/

      # 当推送 tag 时自动创建 release
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      id-token: write
    
    # 只在推送 tag 时运行发布任务
    if: startsWith(github.ref, 'refs/tags/')
    
    environment:
      name: pypi
      url: https://pypi.org/p/chatgpt-mirai-qq-bot-onebot-adapter

    steps:
      # 重新获取版本号
      - name: Get version from tag
        id: get_version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: onebot-adapter-${{ env.RELEASE_VERSION }}
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          skip-existing: true  # 如果版本已存在则跳过